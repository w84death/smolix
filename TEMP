; Load a custom glyph into VGA font memory using BIOS
load_custom_glyph_bios:
    push ds
    pop es              ; Ensure ES = DS (BIOS expects ES:BP for font data)
    lea bp, glyph_data  ; Pointer to custom glyph data (defined below)
    mov ax, 1100h       ; BIOS function to load user-defined font
    mov bh, 10h         ; Number of bytes per character (16 for 8x16 glyph)
    mov bl, 00h         ; RAM block (0 for default)
    mov cx, 01h         ; Number of characters to replace (1 for now)
    mov dx, 80h         ; Starting character to replace (e.g., 0x80, an extended ASCII slot)
    int 10h             ; Call BIOS video interrupt to load the font
    ret

; Custom glyph data for the right arrow icon
glyph_data:
    db 0x00, 0x00, 0x08, 0x18, 0x38, 0x78, 0xF8, 0x78
    db 0x38, 0x18, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00


; Display custom glyph/icon at a specific position
display_custom_glyph:
    mov edi, 0B8000h    ; VGA text buffer base address
    mov ebx, 140h       ; Offset for position (e.g., row 5, col 10: (5*80 + 10)*2 = 340 = 0x140)
    add edi, ebx        ; Calculate memory address
    mov al, 80h         ; Character code for custom glyph (0x80)
    mov ah, 1Eh         ; Attribute: yellow foreground (0xE) on blue background (0x1)
    mov word [edi], ax  ; Write character and attribute to buffer
    ret



; ; System call table
; SYS                 equ 0x0100  ; Position of the router in the kernel
; SYS_RESET           equ 0x0000
; SYS_DOWN            equ 0x0003
; SYS_VER             equ 0x0006
; SYS_PRINT_CHR       equ 0x0009
; SYS_PRINT_STR       equ 0x000C
; SYS_SET_COLOR       equ 0x000F
; SYS_LOAD_GLYPH      equ 0x0012
; SYS_LOAD_ALL_GLYPHS equ 0x0015
; SYS_DRAW_GLYPH      equ 0x0018
; SYS_DRAW_GLYPH_LONG equ 0x001B
; SYS_DRAW_WINDOW     equ 0x001E
; SYS_GET_KEY         equ 0x0021

; ; System call router
; ; This is the system call router. It is a jump table that
; ; redirects system calls to the appropriate function.
; ; Expects: None
; ; Returns: None
; os_call_router:
;     jmp near os_reset
;     jmp near os_down
;     jmp near os_print_ver
;     jmp near os_print_chr
;     jmp near os_print_str
;     jmp near os_set_color
;     jmp near os_load_glyph
;     jmp near os_load_all_glyphs
;     jmp near os_draw_glyph
;     jmp near os_draw_glyph_long
;     jmp near os_draw_window
;     jmp near os_get_key
